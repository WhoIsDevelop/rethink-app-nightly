name: Build APK for arm64-v8a

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Проверяем исходный код
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Для git describe --tags --always

      # 2. Устанавливаем JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Кэшируем Gradle
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Проверяем наличие секрета KEYSTORE_FILE_BASE64
      - name: Check Keystore Secret
        run: |
          if [ -z "${{ secrets.KEYSTORE_FILE_BASE64 }}" ]; then
            echo "Error: KEYSTORE_FILE_BASE64 secret is not set"
            exit 1
          fi

      # 5. Декодируем keystore из секрета
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 -d > app/keystore.jks

      # 6. Проверяем, что keystore.jks создан
      - name: Verify Keystore File
        run: |
          if [ ! -f app/keystore.jks ]; then
            echo "Error: keystore.jks was not created"
            exit 1
          fi
          ls -l app/keystore.jks

      # 7. Создаём keystore.properties
      - name: Create keystore.properties
        run: |
          echo "keyAlias=${{ secrets.KEYSTORE_ALIAS }}" > app/keystore.properties
          echo "keyPassword=${{ secrets.KEYSTORE_KEY_PASSWORD }}" >> app/keystore.properties
          echo "storeFile=app/keystore.jks" >> app/keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_STORE_PASSWORD }}" >> app/keystore.properties
          cat app/keystore.properties

      # 8. Делаем gradlew исполняемым
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 9. Собираем APK
      - name: Build APK
        env:
          VERSION_CODE: ${{ github.run_number }}
        run: ./gradlew clean assembleWebsiteFullRelease --stacktrace

      # 10. Загружаем APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: rethinkdns-nightly-arm64-v8a
          path: app/build/outputs/apk/websiteFullRelease/arm64-v8a/*.apk
          retention-days: 7

      # 11. Логи для отладки при ошибке
      - name: Debug Gradle logs
        if: failure()
        run: |
          cat app/build/reports/*.log || true
          find app/build -type f -name "*.txt" -exec cat {} \;
